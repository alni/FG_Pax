<?xml version="1.0"?>

<!--
    Goes into $FG_ROOT/gui/dialogs/


command interface /autopilot/route-manager/input:

  @clear             ... clear route
  @pop               ... remove first entry
  @delete3           ... delete 4th entry
  @insert2:ksfo@900  ... insert "ksfo@900" as 3rd entry
  ksfo@900           ... append "ksfo@900"

-->

<PropertyList>
    <name>fg-pax</name>
    <layout>vbox</layout>
    <resizable>true</resizable>

    <nasal>
        <open><![CDATA[
            # var money = 0;
            var currentRoute = nil;
            # var route_done = 0;
            # var route_started = 0;
            var listener_distance = nil;
            var num_listeners = nil;

            Company = {};

            Company.init = func {
                print("## INIT FG_Pax ##", "\n");
            };

            Company.startNewRoute = func {
                print("route_started = ", getprop("/fg-pax/route-started"), "\n");
                print("/autopilot/route-manager/active = ", getprop("/autopilot/route-manager/active"), "\n");
                if (!getprop("/fg-pax/route-started") and getprop("/autopilot/route-manager/active")) {
                    # Reset Flight Time to 0 on new route
                    # as it does not reset while airborne
                    # (keeps ticking even when Route Manager is not active)
                    setprop("/autopilot/route-manager/flight-time", 0);

                    print("Distance to end: ", getprop("/autopilot/route-manager/distance-remaining-nm"), "\n");
                    
                    setprop("/fg-pax/route-started", 1);
                    # route_started = 1;
                    listener_distance = _setlistener("/autopilot/route-manager/distance-remaining-nm", Company.eventFly);
                }
                print("route_started = ", getprop("/fg-pax/route-started"), "\n");
            };

            Company.cancelRoute = func {
                setprop("/fg-pax/route-started", 0);
                # route_started = 0;
                currentRoute = nil;
                setprop("/fg-pax/route-done", 0);
                # route_done = 0;
                num_listeners = removelistener(listener_distance);
                if (num_listeners != nil) {
                    if (!num_listeners) {
                        print("Unable to remove listener_distance", "\n");
                    } else {
                        print("Listeners remaining: ", num_listeners, "\n");
                    }
                }
            };

            Company.eventFly = func {
                var ete = getprop("/autopilot/route-manager/ete");
                var h = ete / 3600;
                var m = (h - int(h)) * 60;
                var s = (m - int(m)) * 60;

                # if (ete > 60) {
                #    m = ete / 60;
                #    h = 0;
                # }
                # if (m > 60) {
                #    h = m / 60;
                # }
                # s = ete - (m * 60) - (h * 60 * 60);

                h = int(h);
                m = int(m);
                s = int(s);


                var ete_time = "";
                if (h < 10) {
                    h = "0" ~ h;
                }
                if (m < 10) {
                    m = "0" ~ m;
                }
                if (s < 10) {
                    s = "0" ~ s;
                }
                ete_time = h ~ ":" ~ m ~ ":" ~ s;
                setprop("/fg-pax/eta", ete_time);


				# print("Time in air: ", getProp("/autopilot/route-manager/flight-time"), "\n");
				# print("Distance left: ", getProp("/autopilot/route-manager/distance-remaining-nm"), "\n");
				Company.earned();
			};

            Company.earned = func {
                var route_done = getprop("/fg-pax/route-done");
                var route_started = getprop("/fg-pax/route-started");
                var money = getprop("/fg-pax/money");
                if (!money) {
                    money = 0;
                }

                var dist_rem = getprop("/autopilot/route-manager/distance-remaining-nm");
                var curr_wp = getprop("/autopilot/route-manager/current-wp");
                var airborne = getprop("/autopilot/route-manager/airborne");
                if (!route_done and dist_rem <= 3 and route_started) {
                    var time_flown = getprop("/autopilot/route-manager/flight-time");
                    var earned = (time_flown / 60.0) * 250;

                    money = money + earned;
                    setprop("/fg-pax/money", money);
                    print("Earn on this route: $", earned, "\n");
                    print("Money: $", money, "\n");

                    setprop("/fg-pax/route-done", 1);
                    # route_done = 1;
					Company.cancelRoute();
                }
            };
        ]]>
        </open>

        <close>

        </close>
    </nasal>

    <group>
        <layout>hbox</layout>
        <empty><stretch>1</stretch></empty>

        <text>
            <label>FG Pax</label>
        </text>

        <empty><stretch>1</stretch></empty>

        <button>
            <pref-width>16</pref-width>
            <pref-height>16</pref-height>
            <legend></legend>
            <default>1</default>
            <keynum>27</keynum>
            <border>2</border>

            <binding>
                <command>dialog-close</command>
            </binding>
        </button>
    </group>
    <hrule/>

    <!--<empty><stretch>1</stretch></empty>-->

    <group>
        <layout>hbox</layout>
        <!--<empty><stretch>1</stretch></empty>-->
        <group>
            <layout>vbox</layout>
            <text>
                <label>AA Airways</label>
            </text>
            <group>
                <layout>table</layout>
                <text>
                    <row>0</row>
                    <col>0</col>
                    <halign>left</halign>
                    <label>Captial:</label>
                </text>
                <text>
                    <row>0</row>
                    <col>1</col>
                    <halign>left</halign>
                    <label>$100 000 000 000</label>
                    <format>$%.2f</format>
                    <live>true</live>
                    <property>/fg-pax/money</property>
                </text>
                <text>
                    <row>1</row>
                    <col>0</col>
                    <halign>left</halign>
                    <label>Current depature:</label>
                </text>
                <text>
                    <row>1</row>
                    <col>1</col>
                    <halign>left</halign>
                    <label>KSFO</label>
                    <live>true</live>
                    <property>/autopilot/route-manager/departure/name</property>
                </text>
                <text>
                    <row>2</row>
                    <col>0</col>
                    <halign>left</halign>
                    <label>Current destination:</label>
                </text>
                <text>
                    <row>2</row>
                    <col>1</col>
                    <halign>left</halign>
                    <label>KLAX</label>
                    <live>true</live>
                    <property>/autopilot/route-manager/destination/name</property>
                </text>
                <text>
                    <row>3</row>
                    <col>0</col>
                    <halign>left</halign>
                    <label>ETA:</label>
                </text>
                <text>
                    <row>3</row>
                    <col>1</col>
                    <halign>left</halign>
                    <label>22:22:22</label>
                    <format>%s</format>
                    <live>true</live>
                    <property>/fg-pax/eta</property>
                </text>
                <text>
                    <row>4</row>
                    <col>0</col>
                    <halign>left</halign>
                    <label>Distance left:</label>
                </text>
                <text>
                    <row>4</row>
                    <col>1</col>
                    <halign>left</halign>
                    <label>940.0 nm</label>
                    <format>%.2f nm</format>
                    <live>true</live>
                    <property>/autopilot/route-manager/distance-remaining-nm</property>
                </text>
            </group>
        </group>
        <group>
            <layout>vbox</layout>
            <group>
                <layout>table</layout>
                <text>
                    <row>0</row>
                    <col>0</col>
                    <halign>left</halign>
                    <label>Passengers:</label>
                </text>
                <text>
                    <row>0</row>
                    <col>1</col>
                    <halign>left</halign>
                    <label>240</label>
                </text>
                <text>
                    <row>1</row>
                    <col>0</col>
                    <halign>left</halign>
                    <label>Cargo:</label>
                </text>
                <text>
                    <row>1</row>
                    <col>1</col>
                    <halign>left</halign>
                    <label>10582 lbs</label>
                </text>
                <text>
                    <row>2</row>
                    <col>0</col>
                    <halign>left</halign>
                    <label>Total weight:</label>
                </text>
                <text>
                    <row>2</row>
                    <col>1</col>
                    <halign>left</halign>
                    <label>53062 lbs</label>
                </text>
                <text>
                    <row>3</row>
                    <col>0</col>
                    <halign>left</halign>
                    <label>Time in air:</label>
                </text>
                <text>
                    <row>3</row>
                    <col>1</col>
                    <halign>left</halign>
                    <label>00:45:45</label>
                </text>
                <text>
                    <row>4</row>
                    <col>0</col>
                    <halign>left</halign>
                    <label>Estimated income:</label>
                </text>
                <text>
                    <row>4</row>
                    <col>1</col>
                    <halign>left</halign>
                    <label>$1 018 348</label>
                </text>
                <text>
                    <row>5</row>
                    <col>0</col>
                    <halign>left</halign>
                    <label>Are we there yet?</label>
                </text>
                <text>
                    <row>5</row>
                    <col>1</col>
                    <halign>left</halign>
                    <label>No (wrong airport)</label>
                </text>
            </group>
        </group>
    </group>
    <group>
        <layout>table</layout>
        <button>
            <row>0</row>
            <col>0</col>
            <halign>center</halign>
            <legend>START NEW ROUTE</legend>
            <binding>
                <command>nasal</command>
                <script>Company.startNewRoute()</script>
            </binding>
        </button>
        <button>
            <row>0</row>
            <col>1</col>
            <halign>center</halign>
            <legend>EMERGENCY LANDING</legend>
        </button>
        <button>
            <row>0</row>
            <col>2</col>
            <halign>center</halign>
            <legend>CANCEL ROUTE</legend>
            <binding>
                <command>nasal</command>
                <script>Company.cancelRoute()</script>
            </binding>
        </button>
    </group>
</PropertyList>
